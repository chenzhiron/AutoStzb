
import numpy as np
from ..devices.main import Devices
from ..ocr.main import ocr_format_val
from .tasks_utils import BaseTypeImg
from ..utils import export_excel, find_multiple_templates, pil_to_cv2


class Exploit(BaseTypeImg):
	def __init__(self, d):
		BaseTypeImg.__init__(self)
		self.d = d
		self.result = []
		self.offset_y = 965
		self.screenshot = None
		self.filtered_lines = []

	def siege_battles(self):
		resarr = []
		for v in self.filtered_lines:
			current = []
			# 名字
			r = ocr_format_val(np.array(self.screenshot.crop([160, v + 272, 385, v + 272 + 60])))
			current.append(r)

			print('name:',r)
			
			# 武勋
			exploit = ocr_format_val(np.array(self.screenshot.crop([676, v + 272, 888,  v + 272 + 60])))
			current.append(exploit)

			print('exploit:',exploit)
			resarr.append(current)
		return resarr
	
	def loopinfo(self):
		self.offset_y = 0
		main_img = pil_to_cv2(self.screenshot.crop([1300, 272, 1550, 920]))
		lines = find_multiple_templates(main_img, self.exploit_template_img,offset_y=20)
		

		self.filtered_lines = lines	
		print('filtered_lines: ', self.filtered_lines)
		if len(self.filtered_lines) > 0:
			self.offset_y = int(lines[-1]) + 272
			resarr = self.siege_battles()
			return resarr
		else:
			return []
		
	def execute(self):
		while True:
		# for v in range(5):
			self.screenshot = self.d.screenshot()
			r2 = self.loopinfo()
			print('r2:', r2)
			
			r2_l = len(r2)
			if len(self.result) >= r2_l:
				t = 0
				for k_r,v_r in enumerate(r2):
					if self.result[-(r2_l - k_r)][0] == v_r[0] and \
						self.result[-(r2_l - k_r)][1] == v_r[1] :
						t += 1
				print(r2_l, t)
				if t == r2_l:
					break
			for v in r2:
					self.result.append(v)
			print('self.offset_y', self.offset_y)
			self.d.swipe(950, self.offset_y , 950, 270)
		print(self.result)

		data_map = {}
		for v in self.result:
			if data_map.get(v[0]):
				c = data_map[v[0]]
				c[1] = v[1]
			else:
				data_map[v[0]] = v

		print(data_map)
		a_r = []
		a_r.append(['姓名', '武勋'])
		for key, value in data_map.items():
			a_r.append(value)

		export_excel(a_r, '武勋数据')

if __name__ == '__main__':
	d = Devices('127.0.0.1:16384')
	Exploit(d).execute()
