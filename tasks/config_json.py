# 保存一份配置副本
# 生成一份配置对象
# 通过接受websocket发送过来的单份配置，包括启动，等待，征兵~~~~
# 更新配置对象，同步electron发送过来的配置，并启动调度器

# 通过接受websocket发送过来的单份配置，包括启动，等待，征兵~~~~，添加到调度器当中，并启动，涉及到顺序问题

# 调度器任务存放于electron，当发送任务时，在electron 存放一个任务队列， 开启多个任务，存放在electron中，发送任务给python后
# python 启动调度器，立即执行，当任务结束或者等待的时候，发送消息给 electron ，electron 接受到回来的消息，
# 再发送一个新的任务过来，给python脚本执行，
# python 依旧使用调度器，但是在执行新的任务前，